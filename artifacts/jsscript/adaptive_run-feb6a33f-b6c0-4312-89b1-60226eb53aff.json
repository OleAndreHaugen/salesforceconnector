{
	"id": "feb6a33f-b6c0-4312-89b1-60226eb53aff",
	"createdAt": "2022-06-04T06:10:36.000Z",
	"createdBy": "ole-andre.haugen@neptune-software.com",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "0a8bfac1-07cd-4bfc-bddb-85562ea67e3a",
			"name": "p9_sf_connector",
			"contextname": "p9_sf_connector"
		}
	],
	"apis": [
		{
			"id": "7641f0ef-4fec-48a2-9084-651b32a540ea",
			"parent": "28abbaa4-5fbb-4e19-815f-0a6aa6bed859",
			"name": "/services/data/v53.0/query",
			"contextname": "query",
			"method": "GET"
		}
	],
	"name": "adaptive_run",
	"ver": "22.6.4.1136",
	"description": "Run Report",
	"content": [
		"==OBJECT STRING==",
		"try {\r",
		"\r",
		"    result.data = [];\r",
		"\r",
		"    const connector = await entities.p9_sf_connector.findOne({\r",
		"        select: [\"table\", \"metadata\"],\r",
		"        where: {\r",
		"            // id: \"6aa7ab94-1dd3-403f-bce5-c6dfbca23b36\"\r",
		"            id: req.body._connector.settings.startParam\r",
		"        }\r",
		"    });\r",
		"\r",
		"    if (!connector) return complete();\r",
		"\r",
		"    let responseCount;\r",
		"    let pagination = \"\";\r",
		"    let order = \"\";\r",
		"    let where = \"\";\r",
		"    let whereSep = \"\";\r",
		"    let fields = \"\";\r",
		"    let sep = \"\";\r",
		"\r",
		"    //  Fields\r",
		"    connector.metadata.fields.forEach(function (field, index, array) {\r",
		"        if (field.enableRun) {\r",
		"            fields += sep + field.name;\r",
		"            sep = \",\";\r",
		"        }\r",
		"    });\r",
		"\r",
		"    // Where \r",
		"    const bodyFields = Object.keys(req.body);\r",
		"\r",
		"    bodyFields.forEach(function (fieldName, index, array) {\r",
		"\r",
		"        if (fieldName.substr(0, 1) !== \"_\") {\r",
		"\r",
		"            const fieldValue = req.body[fieldName];\r",
		"            const fieldSel = req.body._settings.fieldsSel.find((f) => f.name === fieldName);\r",
		"\r",
		"            switch (fieldSel.type) {\r",
		"\r",
		"                case \"SingleSelect\":\r",
		"                case \"SingleSelectLookup\":\r",
		"                case \"SingleSelectScript\":\r",
		"                    where += whereSep + \" \" + fieldName + \" = '\" + fieldValue + \"'\";\r",
		"                    break;\r",
		"\r",
		"                case \"MultiSelect\":\r",
		"                case \"MultiSelectLookup\":\r",
		"                case \"MultiSelectScript\":\r",
		"                    let includes = \"\";\r",
		"                    let sep = \"\";\r",
		"\r",
		"                    fieldValue.forEach(function (value, index, array) {\r",
		"                        includes += sep + \"'\" + value + \"'\";\r",
		"                        sep = \",\";\r",
		"                    });\r",
		"\r",
		"                    where += whereSep + \" \" + fieldName + \" IN (\" + includes + \")\";\r",
		"                    break;\r",
		"\r",
		"                default:\r",
		"                    where += whereSep + \" \" + fieldName + \" LIKE '%\" + fieldValue + \"%'\";\r",
		"                    break;\r",
		"\r",
		"            }\r",
		"\r",
		"            whereSep = \" AND \";\r",
		"        }\r",
		"\r",
		"    });\r",
		"\r",
		"    // Order\r",
		"    if (req.body._order) {\r",
		"\r",
		"        const orderField = Object.keys(req.body._order)[0];\r",
		"\r",
		"        if (orderField) {\r",
		"            const orderType = req.body._order[orderField];\r",
		"            order += \" ORDER BY \" + orderField + \" \" + orderType;\r",
		"        }\r",
		"\r",
		"    }\r",
		"\r",
		"    // Pagination\r",
		"    if (req.body._pagination) {\r",
		"\r",
		"        let queryCount = \"SELECT count() FROM \" + connector.table;\r",
		"        if (where) queryCount += \" WHERE \" + where;\r",
		"\r",
		"        responseCount = await apis.query({ parameters: { \"q\": queryCount } });\r",
		"\r",
		"        pagination += \" LIMIT \" + req.body._pagination.take;\r",
		"        pagination += \" OFFSET \" + req.body._pagination.skip;\r",
		"\r",
		"    }\r",
		"\r",
		"    // Start Query API\r",
		"    let queryData = \"SELECT \" + fields + \" FROM \" + connector.table;\r",
		"    if (where) queryData += \" WHERE \" + where;\r",
		"    if (order) queryData += order;\r",
		"    if (pagination) queryData += pagination;\r",
		"\r",
		"    const responseRecords = await apis.query({ parameters: { \"q\": queryData } });\r",
		"\r",
		"    result.data = {\r",
		"        result: responseRecords.data.records,\r",
		"        count: responseCount.data.totalSize\r",
		"    }\r",
		"\r",
		"    complete();\r",
		"\r",
		"} catch (error) {\r",
		"    log.error(\"Error in request: \", error);\r",
		"    complete();\r",
		"}\r",
		"\r",
		"\r",
		""
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": true,
	"jsscriptGroup": "8724ce1d-db36-43cb-a923-3e0be5432b2a",
	"package": "ace216dd-a722-4e40-9d39-6049629fca12"
}